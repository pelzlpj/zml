
* Draw a cleaner distinction between "variables", "virtual zasm registers", and "zasm registers".
	Three different data types... even if they're all "int" under the hood they should probably be
	hidden behind abstract types so that the type system can force correct usage.  Probably makes
	sense to create a ZasmVirtual module to keep the virtual stuff segregated.

* Parser rewrite.  I'm not liking the way the ocamlyacc parser is shaping up.  It's difficult to
  read, and I'm not sure it will scale up well to more complicated syntax.  I plan to rewrite using
	a recursive descent approach.  I want to do this rewrite *before* adding significant amounts of
	new syntax.

* Introduction of reference types.  The runtime library already has reference type support, but the
	zasm layer needs a bunch of work to invoke zml_register_root and zml_unregister_root in order to
	manage the lifetimes of reference types declared on the stack.

